==========================================
The Hitchhiker's Guide to Computer Science
==========================================

Far out in the uncharted backwaters of the unfashionable beginning of the 21st
century lies a small subset of human knowledge. Within this subset of human 
knowledge is an utterly insignificant little discipline whose Von 
Neumann–descended architecture is so amazingly primitive that it is still 
thought that RPN calculators are a pretty neat idea.

This discipline has—or rather had—a problem, which was this: Most of the people 
studying it were unhappy for pretty much of the time when trying to write 
parallel software. 
Many solutions were suggested for this problem, but most of these were largely 
concerned with the handling of little pieces of logic called locks and mutexes 
and whatnot, which is odd because on the whole, it wasn’t the small pieces of 
logic that needed parallelism. And so the problem remained. Lots of people were 
mean, and most of them were miserable, even those with RPN calculators. 
Many were increasingly of the opinion that they’d all made a big mistake in 
trying to add parallelism to their programming languages, and that no program 
should have ever left its initial thread.

Parodying The Hitchhiker’s Guide to the Galaxy is fun. Read the book if you
haven’t already. It’s good!

-----------
Don't Panic
-----------

Hi. Today (or whatever day you are reading this—even tomorrow), I’m going to 
tell you about what to expect when you're in for a Computer Science degree
course in the university. 

Despite the fact that ever since the start of the 'damn panic' (wait a minute, 
I mean the pandemic), I have been remiss in responding to calls and messages
(sorry for my thoughtlessness), university students and boys I left at secondary 
in 2014 BC (Before Covid) nonetheless do occasionally call and message me asking 
for career advice, and since am in a good mood today, I thought I’d write up my 
standard advice which they can read, laugh at, and ignore. 


Despite the fact that most students are brash enough never to bother asking 
their elders for advice, which, in the field of computer science, is a good 
thing, because their elders are apt to say goofy, antediluvian things like

I was blubbering about how 

I, too, have no idea what I’m talking about when I give advice to students. 
I’m so hopelessly out of date that I can’t really figure 
I will bring you up to date now, but before you read on, 
please sit down. You are not to read any further unless you are sitting down, okay?


So you’d be better off ignoring what I’m saying here and instead go to some kind 
of online software thing that lets other students find people to go out on dates with.



What was I talking about? Oh yeah. Advice.

Without further flurry, then, here are my seven pieces of free trial advise valid upto when you know what you really want to achieve after your degree. (worth what you paid for them):

---------------------------------------------------------
1. Learn how to write before graduating.
2. Learn how to give a good talk.
3. Learn C before graduating.
3. Learn microeconomics before graduating.
4. Don’t blow off non-CS classes just because they’re boring.
5. Take programming-intensive courses.
6. Stop worrying about there being 'no' jobs.
7. No matter what you do, get a good internship.
---------------------------------------------------------

AND NOW LADIES AND GENTLEMEN, A DISCUSSION:
THE AUTHOR VS. HIMSELF

Self: Nam adipiscing semper erat, quis faucibus tortor consectetur et. 
Donec sit amet metus dui, eu varius justo. Morbi vel nulla sollicitudin ante ullamcorper mattis. 
Aenean ut libero diam, tempor condimentum sem. Integer sit amet leo id arcu facilisis sollicitudin.

Author: Cras est lorem, feugiat eget sagittis quis, placerat vel massa. Morbi ac elit tellus.
In in lectus libero. Duis tincidunt semper mauris nec pretium.
Pellentesque sed dui quis lectus faucibus sollicitudin non non est.
